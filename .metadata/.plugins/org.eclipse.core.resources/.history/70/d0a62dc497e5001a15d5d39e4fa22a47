
public class Heap_Sort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a[] = { 9, 5, 1, 6, 7, 74, 2, 0, 3, 8 };
		heapsort(a, a.length);
		
		for(int i:a)
		{
			System.out.print(i+" ");
		}
	}

	static void heapsort(int []a,int n)
	{
		for(int i=n/2-1;i>=0;i--)
		{
			heapify(a, n, i); 
		}
		
		for (int i=n-1; i>0; i--) 
        { 
            // Move current root to end 
            int temp = a[0]; 
            a[0] = a[i]; 
            a[i] = temp; 
  
            // call max heapify on the reduced heap 
            heapify(a, i, 0);
        }
	}

	static void heapify(int[] a, int n, int i) {
		int root = i;
		int left = 2 * i + 1;
		int right = 2 * i + 2;

		if (left < n && a[left] > a[root]) {
			root = left;
		}
		if (right < n && a[right] > a[root]) {
			root = right;
		}

		if (root != i) {
			int swap = a[i];
			a[i] = a[root];
			a[root] = swap;

			heapify(a, n, root);
		}

	}
}
